{
  "exportType": {
    "body": ["export type ${1:first} = {${2:second}}"],
    "prefix": "expt"
  },
  "exportInterface": {
    "prefix": "expi",
    "body": ["export interface ${1:first} {${2:second}}"]
  },
  "tsReactArrowFunctionExportComponent": {
    "prefix": "tsrafce",
    "body": [
      "export type ${1}Props = {}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({}: ${1}Props) => {",
      "  return (",
      "    <div>${1}</div>",
      "  )",
      "}",
      "",
      "export default ${1}"
    ],
    "description": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface"
  },
  "tsReactArrowFunctionComponent": {
    "prefix": "tsrafc",
    "body": [
      "export type ${1}Props = {}",
      "",
      "export const ${1:${TM_FILENAME_BASE}} = ({}: ${1}Props) => {",
      "  return (",
      "    <div>${1}</div>",
      "  )",
      "}"
    ],
    "description": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface"
  },
  "reactArrowFunctionExportComponent": {
    "prefix": "rafce",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <div>${1}</div>",
      "  )",
      "}",
      "",
      "export default ${1}"
    ],
    "description": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface"
  },
  "reactArrowFunctionComponent": {
    "prefix": "rafc",
    "body": [
      "export const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <div>${1}</div>",
      "  )",
      "}"
    ],
    "description": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface"
  },
  "reactArrowFunctionMemoComponent": {
    "prefix": "rmc",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = React.memo(() => {",
      "  return (",
      "    <div>${1}</div>",
      "  )",
      "})",
      "",
      "export default ${1}"
    ],
    "description": "Creates a React Memo Function Component with ES7 module system"
  },
  "useCallback": {
    "prefix": "ucb",
    "body": [
      "const ${1:memoizedCallback} = React.useCallback(",
      "  () => {",
      "    ${2}",
      "  },",
      "  [${3}],",
      ")",
      ""
    ],
    "description": "React useCallback() hook"
  },
  "useContext": {
    "prefix": "uc",
    "body": ["const ${1} = React.useContext(${2})"],
    "description": "React useContex() hook"
  },
  "useEffect": {
    "prefix": "ue",
    "body": [
      "React.useEffect(() => {",
      "  ${1}",
      "",
      "  return () => {",
      "    ${2}",
      "  }",
      "}, [${3}])",
      ""
    ],
    "description": "React useEffect() hook"
  },
  "useMemo": {
    "prefix": "um",
    "body": ["const ${1:memoizedValue} = React.useMemo(() => ${2:0}, [${3}])"],
    "description": "React useMemo() hook"
  },
  "useReducer": {
    "prefix": "urd",
    "body": ["const [state, dispatch] = React.useReducer(${1}, ${2}, ${3})"],
    "description": "React useReducer() hook"
  },
  "useRef": {
    "prefix": "ur",
    "body": ["const ${1} = React.useRef(${2})"],
    "description": "React useRef() hook"
  },
  "useState": {
    "prefix": "us",
    "body": ["const [${1}, set${2}] = React.useState(${3})"],
    "description": "useState (capitalize does not seem to work on json for Luasnip)"
  },
  "createContext": {
    "prefix": "cctx",
    "body": ["const ${1} = React.createContext()"],
    "description": "Create React context"
  },
  "createRef": {
    "prefix": "cref",
    "body": ["const ${1}Ref = React.createRef()"],
    "description": "Create ref statement"
  },
  "children": {
    "prefix": "child",
    "body": ["{children}: {children: React.ReactNode}"]
  }
}
